/*
 * Copyright (c) 2016 Open Baton (http://www.openbaton.org)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */

// Global Helpers //////////////////////////////////////////////////////////////

import java.text.SimpleDateFormat

rootProject.ext.execAndGetOutput = { String command ->
	try {
		def stdout = new ByteArrayOutputStream()

		exec {
			workingDir rootProject.projectDir
			commandLine command.split()
			standardOutput = stdout
		}

		return stdout.toString().trim()
	}
	catch (Exception e) {
		return null
	}
}

rootProject.ext.asUTC = { Date date, String format ->
	def snapshotDateFormat = new SimpleDateFormat(format)
	snapshotDateFormat.setTimeZone(TimeZone.getTimeZone('UTC'))

	return snapshotDateFormat.format(date)
}

rootProject.ext.getRevision = {
	String currentCommit = execAndGetOutput("git rev-parse --short HEAD")
	return (currentCommit != null) ? currentCommit : "UNKNOWN"
}

rootProject.ext.isApplicationRelease = {
	// Note: This must work for detached commits (git checkout -qf <commit>)

	String currentBranches = execAndGetOutput("git log -n 1 --pretty=%d HEAD")
	return currentBranches!=null ? currentBranches.contains("master") : false
}

